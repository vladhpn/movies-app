{"version":3,"file":"static/js/MovieDetails.6b1a25cf.chunk.js","mappings":"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","sources":["redux/movies/movies-selector.js","pages/MovieDetails/MovieDetails.jsx","redux/movies/movies-operations.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getTrailer = (state) => state.movies.movieTrailerReducer;\n\nexport const movieTrailer = createSelector(\n  [getTrailer],\n  (movieTrailerReducer) => {\n    return movieTrailerReducer.find(({ type }) => type === 'Trailer');\n  }\n);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Details } from '../../components/Details/Details';\n\nimport {\n  fetchMovieCast,\n  fetchMovieDetails,\n  fetchMovieTrailer,\n} from '../../redux/movies/movies-operations';\n\nimport { movieTrailer } from '../../redux/movies/movies-selector';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchMovieDetails(id));\n    dispatch(fetchMovieTrailer(id));\n    dispatch(fetchMovieCast(id));\n  }, [dispatch, id]);\n\n  const movieDetails = useSelector((state) => state.movies.movieDetailsReducer);\n  const cast = useSelector((state) => state.movies.movieCastReducer);\n    const trailer = useSelector(movieTrailer);\n\n  return (<Details details={movieDetails} cast={cast} trailer={trailer}/> );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n  fetchPopuladMoviesRequest,\n  fetchPopuladMoviesSuccess,\n  fetchPopuladMoviesError,\n  fetchTopMoviesRequest,\n  fetchTopMoviesSuccess,\n  fetchTopMoviesError,\n  fetchTrendingMoviesRequest,\n  fetchTrendingMoviesSuccess,\n  fetchTrendingMoviesError,\n  fetchMovieByTitleRequest,\n  fetchMovieByTitleSuccess,\n  fetchMovieByTitleError,\n  fetchMovieDetailsSuccess,\n  fetchMovieDetailsError,\n  fetchMovieDetailsRequest,\n  fetchMovieTrailerRequest,\n  fetchMovieTrailerSuccess,\n  fetchMovieTrailerError,\n  fetchMovieCastRequest,\n  fetchMovieCastSuccess,\n  fetchMovieCastError,\n} from './movies-action.js';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport const fetchPopularMovies = () => async (dispatch) => {\n  dispatch(fetchPopuladMoviesRequest());\n  try {\n    const response = await axios.post(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchPopuladMoviesSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchPopuladMoviesError(error.message));\n  }\n};\n\nexport const fetchTopMovies = () => async (dispatch) => {\n  dispatch(fetchTopMoviesRequest());\n  try {\n    const response = await axios.post(\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchTopMoviesSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchTopMoviesError(error.message));\n  }\n};\n\nexport const fetchTrendingMovies = () => async (dispatch) => {\n  dispatch(fetchTrendingMoviesRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n    );\n\n    dispatch(fetchTrendingMoviesSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchTrendingMoviesError(error.message));\n  }\n};\n\nexport const fetchMovieByTitle = (query) => async (dispatch) => {\n  dispatch(fetchMovieByTitleRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n    );\n\n    dispatch(fetchMovieByTitleSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchMovieByTitleError(error.message));\n  }\n};\n\nexport const fetchMovieDetails = (id) => async (dispatch) => {\n  dispatch(fetchMovieDetailsRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchMovieDetailsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchMovieDetailsError(error.message));\n  }\n};\n\nexport const fetchMovieTrailer = (id) => async (dispatch) => {\n  dispatch(fetchMovieTrailerRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchMovieTrailerSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchMovieTrailerError(error.message));\n  }\n};\n\nexport const fetchMovieCast = (id) => async (dispatch) => {\n  dispatch(fetchMovieCastRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchMovieCastSuccess(response.data.cast));\n  } catch (error) {\n    dispatch(fetchMovieCastError(error.message));\n  }\n};\n"],"names":["movieTrailer","createSelector","state","movies","movieTrailerReducer","find","type","id","useParams","dispatch","useDispatch","useEffect","fetchMovieDetails","fetchMovieTrailer","fetchMovieCast","movieDetails","useSelector","movieDetailsReducer","cast","movieCastReducer","trailer","Details","details","apiKey","process","fetchPopularMovies","fetchPopuladMoviesRequest","axios","response","fetchPopuladMoviesSuccess","data","results","fetchPopuladMoviesError","message","fetchTopMovies","fetchTopMoviesRequest","fetchTopMoviesSuccess","fetchTopMoviesError","fetchTrendingMovies","fetchTrendingMoviesRequest","fetchTrendingMoviesSuccess","fetchTrendingMoviesError","fetchMovieByTitle","query","fetchMovieByTitleRequest","fetchMovieByTitleSuccess","fetchMovieByTitleError","fetchMovieDetailsRequest","fetchMovieDetailsSuccess","fetchMovieDetailsError","fetchMovieTrailerRequest","fetchMovieTrailerSuccess","fetchMovieTrailerError","fetchMovieCastRequest","fetchMovieCastSuccess","fetchMovieCastError"],"sourceRoot":""}