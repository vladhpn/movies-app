{"version":3,"file":"static/js/Movies.97a81b8b.chunk.js","mappings":"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","sources":["api.js","components/MovieCard/MovieCard.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","redux/movies/movies-operations.js"],"sourcesContent":["export const imageUrl = 'https://image.tmdb.org/t/p/w500';\nexport const posterUrl = 'https://image.tmdb.org/t/p/original';\n","import { posterUrl } from '../../api'\n\nimport defaultImg from '../../images/no-image.jpeg'\n\nexport const MovieCard = ({ data, path }) => {\n\n  const url = path === 'movies' ? 'movies' : 'tv-shows'\n\n  return (\n    <div className='group w-[248px] mb-8 hover:scale-110 ease-in-out duration-300 '>\n          <a href={`/${url}/${data.id}`}>\n        <img\n          className='object-cover h-[370px]'\n          src={data.poster_path ? posterUrl + `${data.poster_path}` : defaultImg}\n          alt={data.original_title}\n        />\n        <h4 className='text-white text-xl group-hover:text-purple-500 mt-2'>\n          {!data.title ? data.name : data.title}\n        </h4>\n      </a>\n    </div>\n  );\n};\n","export const SearchForm = ({ handleSubmit, movieTitle, handleInputChange }) => {\n\n  return (<>\n        <h1 className='text-center m-8 text-6xl text-white'>Trending Today</h1>\n          <div className='w-2/5  ml-auto mr-auto mb-10'>\n        <form onSubmit={handleSubmit}>\n          <label className='relative block'>\n            <span className='sr-only text-white'>Search</span>\n            <span className='absolute inset-y-0 left-0 flex items-center pl-2'>\n              <button>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  fill='none'\n                  viewBox='0 0 24 24'\n                  strokeWidth={1.5}\n                  stroke='white'\n                  className='w-6 h-6 stroke-white hover:stroke-purple-500'\n                >\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    d='M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z'\n                  />\n                </svg>\n              </button>\n            </span>\n            <input\n              className='placeholder:italic placeholder:text-slate-400 block bg-zinc-800 w-full h-12 border border-slate-300 rounded-md py-2 pl-9 pr-3 shadow-sm focus:outline-none focus:border-purple-500 focus:shadow-md focus:shadow-purple-500 focus:ring-purple-500 focus:ring-1 sm:text-sm text-white'\n              placeholder='Search movies'\n              type='text'\n              name='search'\n              value={movieTitle}\n              onChange={handleInputChange}\n            />\n          </label>\n        </form>\n    </div>\n    </>\n    )\n}","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\n\nimport {\n  fetchTrendingMovies,\n  fetchMovieByTitle,\n} from '../../redux/movies/movies-operations';\n\nconst Movies = () => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTrendingMovies());\n  }, [dispatch]);\n\n  const handleInputChange = useCallback((event) => {\n    setMovieTitle(event.currentTarget.value);\n  }, []);\n\n  const handleSubmit = useCallback(\n    (event) => {\n      event.preventDefault();\n      dispatch(fetchMovieByTitle(movieTitle));\n      setMovieTitle('');\n      setIsSearch(true);\n    },\n    [dispatch, movieTitle]\n  );\n\n  const trendingMovies = useSelector(\n    (state) => state.movies.trendingMoviesReducer\n  );\n  const moviesByTitle = useSelector(\n    (state) => state.movies.moviesByTitleReducer\n  );\n\n  const movies = !isSearch ? trendingMovies : moviesByTitle;\n\n  return (\n    <div className='mx-20'>\n      <SearchForm\n        handleSubmit={handleSubmit}\n        movieTitle={movieTitle}\n        handleInputChange={handleInputChange}\n      />\n\n      <div className='flex flex-wrap'>\n        {movies.map((movie) => (\n          <div key={movie.id} className='mr-2'>\n            <MovieCard data={movie} path='movies' />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport {\n  fetchPopuladMoviesRequest,\n  fetchPopuladMoviesSuccess,\n  fetchPopuladMoviesError,\n  fetchTopMoviesRequest,\n  fetchTopMoviesSuccess,\n  fetchTopMoviesError,\n  fetchTrendingMoviesRequest,\n  fetchTrendingMoviesSuccess,\n  fetchTrendingMoviesError,\n  fetchMovieByTitleRequest,\n  fetchMovieByTitleSuccess,\n  fetchMovieByTitleError,\n  fetchMovieDetailsSuccess,\n  fetchMovieDetailsError,\n  fetchMovieDetailsRequest,\n  fetchMovieTrailerRequest,\n  fetchMovieTrailerSuccess,\n  fetchMovieTrailerError,\n  fetchMovieCastRequest,\n  fetchMovieCastSuccess,\n  fetchMovieCastError,\n} from './movies-action.js';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport const fetchPopularMovies = () => async (dispatch) => {\n  dispatch(fetchPopuladMoviesRequest());\n  try {\n    const response = await axios.post(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchPopuladMoviesSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchPopuladMoviesError(error.message));\n  }\n};\n\nexport const fetchTopMovies = () => async (dispatch) => {\n  dispatch(fetchTopMoviesRequest());\n  try {\n    const response = await axios.post(\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchTopMoviesSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchTopMoviesError(error.message));\n  }\n};\n\nexport const fetchTrendingMovies = () => async (dispatch) => {\n  dispatch(fetchTrendingMoviesRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n    );\n\n    dispatch(fetchTrendingMoviesSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchTrendingMoviesError(error.message));\n  }\n};\n\nexport const fetchMovieByTitle = (query) => async (dispatch) => {\n  dispatch(fetchMovieByTitleRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n    );\n\n    dispatch(fetchMovieByTitleSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchMovieByTitleError(error.message));\n  }\n};\n\nexport const fetchMovieDetails = (id) => async (dispatch) => {\n  dispatch(fetchMovieDetailsRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchMovieDetailsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchMovieDetailsError(error.message));\n  }\n};\n\nexport const fetchMovieTrailer = (id) => async (dispatch) => {\n  dispatch(fetchMovieTrailerRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchMovieTrailerSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchMovieTrailerError(error.message));\n  }\n};\n\nexport const fetchMovieCast = (id) => async (dispatch) => {\n  dispatch(fetchMovieCastRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchMovieCastSuccess(response.data.cast));\n  } catch (error) {\n    dispatch(fetchMovieCastError(error.message));\n  }\n};\n"],"names":["imageUrl","posterUrl","MovieCard","data","url","path","className","href","id","src","poster_path","defaultImg","alt","original_title","title","name","SearchForm","handleSubmit","movieTitle","handleInputChange","onSubmit","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","placeholder","type","value","onChange","useState","setMovieTitle","isSearch","setIsSearch","dispatch","useDispatch","useEffect","fetchTrendingMovies","useCallback","event","currentTarget","preventDefault","fetchMovieByTitle","trendingMovies","useSelector","state","movies","trendingMoviesReducer","moviesByTitle","moviesByTitleReducer","map","movie","apiKey","process","fetchPopularMovies","fetchPopuladMoviesRequest","axios","response","fetchPopuladMoviesSuccess","results","fetchPopuladMoviesError","message","fetchTopMovies","fetchTopMoviesRequest","fetchTopMoviesSuccess","fetchTopMoviesError","fetchTrendingMoviesRequest","fetchTrendingMoviesSuccess","fetchTrendingMoviesError","query","fetchMovieByTitleRequest","fetchMovieByTitleSuccess","fetchMovieByTitleError","fetchMovieDetails","fetchMovieDetailsRequest","fetchMovieDetailsSuccess","fetchMovieDetailsError","fetchMovieTrailer","fetchMovieTrailerRequest","fetchMovieTrailerSuccess","fetchMovieTrailerError","fetchMovieCast","fetchMovieCastRequest","fetchMovieCastSuccess","cast","fetchMovieCastError"],"sourceRoot":""}