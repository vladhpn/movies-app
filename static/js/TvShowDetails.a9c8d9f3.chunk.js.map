{"version":3,"file":"static/js/TvShowDetails.a9c8d9f3.chunk.js","mappings":"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","sources":["redux/tv/tv-selector.js","pages/TvShowDetails/TvShowDetails.jsx","redux/tv/tv-operations.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getTrailer = (state) => state.tv.tvTrailerReducer;\n\nexport const tvTrailer = createSelector([getTrailer], (tvTrailerReducer) => {\n  return tvTrailerReducer.find(({ type }) => type === 'Trailer');\n});\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Details } from '../../components/Details/Details';\nimport { tvTrailer } from '../../redux/tv/tv-selector';\n\nimport {\n  fetchTvCast,\n  fetchTvDetails,\n  fetchTvTrailer,\n} from '../../redux/tv/tv-operations';\n\nconst TvShowDetails = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTvCast(id));\n    dispatch(fetchTvDetails(id));\n    dispatch(fetchTvTrailer(id));\n  }, [dispatch, id]);\n\n  const details = useSelector((state) => state.tv.tvDetailsReducer);\n  const cast = useSelector((state) => state.tv.tvCastReducer);\n  const trailer = useSelector(tvTrailer);\n\n  return <Details details={details} trailer={trailer} cast={cast} />;\n};\n\nexport default TvShowDetails;\n","import axios from 'axios';\nimport {\n  fetchPopuladTvShowRequest,\n  fetchPopuladTvShowSuccess,\n  fetchPopuladTvShowError,\n  fetchTopTvShowRequest,\n  fetchTopTvShowSuccess,\n  fetchTopTvShowError,\n  fetchTrendingTvShowsRequest,\n  fetchTrendingTvShowsSuccess,\n  fetchTrendingTvShowsError,\n  fetchTvByTitleRequest,\n  fetchTvByTitleSuccess,\n  fetchTvByTitleError,\n  fetchTvDetailsRequest,\n  fetchTvDetailsSuccess,\n  fetchTvDetailsError,\n  fetchTvTrailerRequest,\n  fetchTvTrailerSuccess,\n  fetchTvTrailerError,\n  fetchTvCastRequest,\n  fetchTvCastSuccess,\n  fetchTvCastError,\n} from './tv-action';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport const fetchPopularTvShow = () => async (dispatch) => {\n  dispatch(fetchPopuladTvShowRequest());\n  try {\n    const response = await axios.post(\n      `https://api.themoviedb.org/3/tv/popular?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchPopuladTvShowSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchPopuladTvShowError(error.message));\n  }\n};\n\nexport const fetchTopTvShow = () => async (dispatch) => {\n  dispatch(fetchTopTvShowRequest());\n  try {\n    const response = await axios.post(\n      `https://api.themoviedb.org/3/tv/top_rated?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchTopTvShowSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchTopTvShowError(error.message));\n  }\n};\n\nexport const fetchTrendingTvShows = () => async (dispatch) => {\n  dispatch(fetchTrendingTvShowsRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/tv/day?api_key=${apiKey}`\n    );\n\n    dispatch(fetchTrendingTvShowsSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchTrendingTvShowsError(error.message));\n  }\n};\n\nexport const fetchTvByTitle = (query) => async (dispatch) => {\n  dispatch(fetchTvByTitleRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/tv?api_key=${apiKey}&query=${query}`\n    );\n\n    dispatch(fetchTvByTitleSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchTvByTitleError(error.message));\n  }\n};\n\nexport const fetchTvDetails = (id) => async (dispatch) => {\n  dispatch(fetchTvDetailsRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/tv/${id}?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchTvDetailsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchTvDetailsError(error.message));\n  }\n};\n\nexport const fetchTvTrailer = (id) => async (dispatch) => {\n  dispatch(fetchTvTrailerRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/tv/${id}/videos?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchTvTrailerSuccess(response.data.results));\n  } catch (error) {\n    dispatch(fetchTvTrailerError(error.message));\n  }\n};\n\nexport const fetchTvCast = (id) => async (dispatch) => {\n  dispatch(fetchTvCastRequest());\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/tv/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n\n    dispatch(fetchTvCastSuccess(response.data.cast));\n  } catch (error) {\n    dispatch(fetchTvCastError(error.message));\n  }\n};\n"],"names":["tvTrailer","createSelector","state","tv","tvTrailerReducer","find","type","id","useParams","dispatch","useDispatch","useEffect","fetchTvCast","fetchTvDetails","fetchTvTrailer","details","useSelector","tvDetailsReducer","cast","tvCastReducer","trailer","Details","apiKey","process","fetchPopularTvShow","fetchPopuladTvShowRequest","axios","response","fetchPopuladTvShowSuccess","data","results","fetchPopuladTvShowError","message","fetchTopTvShow","fetchTopTvShowRequest","fetchTopTvShowSuccess","fetchTopTvShowError","fetchTrendingTvShows","fetchTrendingTvShowsRequest","fetchTrendingTvShowsSuccess","fetchTrendingTvShowsError","fetchTvByTitle","query","fetchTvByTitleRequest","fetchTvByTitleSuccess","fetchTvByTitleError","fetchTvDetailsRequest","fetchTvDetailsSuccess","fetchTvDetailsError","fetchTvTrailerRequest","fetchTvTrailerSuccess","fetchTvTrailerError","fetchTvCastRequest","fetchTvCastSuccess","fetchTvCastError"],"sourceRoot":""}